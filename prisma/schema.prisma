// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String
  firstName String
  lastName  String
  password  String
  projects  Project[]
  tasks     Task[]
}

//Index is used to quicken the search by reducing the number of records to search for.

model Project {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  name        String
  description String?
  due         DateTime?
  tasks       Task[]
  deleted     Boolean   @default(false) //for soft delete purposes

  @@unique([ownerId, name])
  @@index([ownerId, id]) //find a project that belongs to this owner [ownerId] but has this id [id]
}

enum TASK_STATUS {
  NOT_STARTED
  STARTED
  COMPLETED
}

model Task {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  status      TASK_STATUS @default(NOT_STARTED)
  name        String
  description String

  due     DateTime?
  deleted Boolean   @default(false) //for soft delete purposes

  @@index([ownerId])
}
